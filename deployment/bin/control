#!/bin/bash
cd "$(dirname $0)"/.. || exit 1
export NEDIS_BASE=$(pwd)

NEDIS_HOME="/usr/local/share/lua/5.1/nedis"
NGINX_HOME="/export/servers/nginx"
CONFIG_HOME="/export/Data/nedis"

PROC_NAME=nginx # 进程名
CHECK_CONFIG_COMMAND="$NGINX_HOME/sbin/nginx -t -c $CONFIG_HOME/nginx.conf"
START_COMMAND="$NGINX_HOME/sbin/nginx -c $CONFIG_HOME/nginx.conf"
PROC_PORT=8000 # 没有可不写
WAIT_TIME=120 # 等待启动/停止时间
help(){
    echo "${0} <start|stop|restart|status>"
    exit 1
}
  
checkhealth(){
    if [[ -n "$PROC_PORT" ]] ; then
        PORT_PROC=$(/usr/sbin/ss -nltp "( sport = :$PROC_PORT )" |sed 1d |awk '{print $NF}' |awk -F'"' '{print $2}'|uniq)
        if [ X"$PORT_PROC" = X"$PROC_NAME" ] ; then
                echo "running"
            return 0
        fi
        echo "not running"
        return 1
   else
       ps -eo comm,pid |grep -P  "^$PROC_NAME\b"
       if [ "$?" = 0 ] ; then
       echo "running"
           return 0
       fi
       echo "not running"
       return 1
   fi
}
  
start(){
    checkhealth
    if [ $? = 0 ]; then
        echo "[WARN] $PROC_NAME is aleady running!"
        return 0
    fi
	#做Logs的软链接
	ln -sf /export/Logs/$SKYWING_APP_NAME/$SKYWING_INSTANCE_NAME /export/Logs/link

	/bin/rm -rf "/usr/local/share/lua/5.1/nedis"
    /usr/bin/cp -r nedis ${NEDIS_HOME}/share/lua/5.1/nedis
	#覆盖配置文件
	/usr/bin/cp -r conf/* $CONFIG_HOME/
    export LC_CTYPE=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
	#检查配置文件是否正确
	output=`$CHECK_CONFIG_COMMAND`
	if [ $? != 0 ]; then
	    echo "[ERR] nginx configtest failed. output[$output]"
		return 1
	fi
	
    nohup $START_COMMAND  </dev/null &>> /dev/termination-log  &
  
    for i in $(seq $WAIT_TIME) ; do
        sleep 1
        checkhealth
        if [ $? = 0 ]; then
            echo "Start $PROC_NAME success"
            return 0
        fi
    done
    echo "[ERROR] Start $PROC_NAME failed"
    return 1
}
  
stop(){
    if [[ -n "$PROC_PORT"  ]] ; then
        PROC_ID=$(  /usr/sbin/ss -nltp "( sport = :$PROC_PORT )" |sed 1d  | awk '{print $NF}' |  grep -oP '\,.*\,' | grep -oP "\d+" |  uniq )
    else
        PROC_ID=$(ps -eo comm,pid  | grep "^$PROC_NAME\b" |awk '{print $2}')
    fi
  
    if [[ -z "$PROC_ID" ]] ; then
        echo "[WARN] $PROC_NAME is aleady exit, skip stop"
        return 0
    fi
  
    checkhealth
    if [ "$?" != "0" ] ; then
        echo "[WARN] $PROC_NAME is aleady exit, skip stop"
        return 0
    fi
    kill $PROC_ID
    for i in $(seq $WAIT_TIME) ; do
        sleep 1
        checkhealth
        if [ "$?" != "0" ] ; then
            echo "Stop $PROC_NAME success"
            return 0
        fi
    done
  
    kill -9 $PROC_ID
    sleep 1
    checkhealth
    if [ "$?" != "0" ] ; then
        echo "Stop $PROC_NAME success"
        return 0
    fi
  
    echo "[ERROR] Stop $PROC_NAME failed"
    return 1
}
  
case "${1}" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status|health|checkhealth)
        checkhealth
        ;;
    restart)
        stop && start
        ;;
    *)
        help
        ;;
esac
